// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Primary design header
//
// This header should be included by all source files instantiating the design.
// The class here is then constructed to instantiate the design.
// See the Verilator manual for examples.

#ifndef _VSE_H_
#define _VSE_H_  // guard

#include "verilated.h"

//==========

class VSE__Syms;
class VSE_InvCipherRound_3;
class VSE_InvSubBytes;
class VSE_CipherRound_1;
class VSE_SubBytes;


//----------

VL_MODULE(VSE) {
  public:
    // CELLS
    // Public to allow access to /*verilator_public*/ items;
    // otherwise the application code can consider these internals.
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_3;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_4;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_5;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_6;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_7;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_8;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_9;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_10;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_11;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_12;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_13;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_14;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_15;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_16;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_17;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_18;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_19;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_20;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_21;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_22;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_23;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_24;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_25;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_26;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_27;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_28;
    VSE_InvCipherRound_3* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_29;
    VSE_InvSubBytes* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvSubBytes;
    VSE_InvSubBytes* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvSubBytes;
    VSE_InvSubBytes* __PVT__SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvSubBytes;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_1;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_2;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_3;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_4;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_5;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_6;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_7;
    VSE_CipherRound_1* __PVT__SE__DOT__aes_cipher__DOT__CipherRound_8;
    VSE_SubBytes* __PVT__SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes;
    
    // PORTS
    // The application code writes and reads these signals to
    // propagate new values into/out from the Verilated model.
    VL_IN8(clock,0,0);
    VL_IN8(reset,0,0);
    VL_IN8(io_in_inst,7,0);
    VL_IN8(io_in_valid,0,0);
    VL_OUT8(io_in_ready,0,0);
    VL_IN8(io_in_changeKey_en,0,0);
    VL_IN8(io_in_newKey_0_0,7,0);
    VL_IN8(io_in_newKey_0_1,7,0);
    VL_IN8(io_in_newKey_0_2,7,0);
    VL_IN8(io_in_newKey_0_3,7,0);
    VL_IN8(io_in_newKey_0_4,7,0);
    VL_IN8(io_in_newKey_0_5,7,0);
    VL_IN8(io_in_newKey_0_6,7,0);
    VL_IN8(io_in_newKey_0_7,7,0);
    VL_IN8(io_in_newKey_0_8,7,0);
    VL_IN8(io_in_newKey_0_9,7,0);
    VL_IN8(io_in_newKey_0_10,7,0);
    VL_IN8(io_in_newKey_0_11,7,0);
    VL_IN8(io_in_newKey_0_12,7,0);
    VL_IN8(io_in_newKey_0_13,7,0);
    VL_IN8(io_in_newKey_0_14,7,0);
    VL_IN8(io_in_newKey_0_15,7,0);
    VL_IN8(io_in_newKey_1_0,7,0);
    VL_IN8(io_in_newKey_1_1,7,0);
    VL_IN8(io_in_newKey_1_2,7,0);
    VL_IN8(io_in_newKey_1_3,7,0);
    VL_IN8(io_in_newKey_1_4,7,0);
    VL_IN8(io_in_newKey_1_5,7,0);
    VL_IN8(io_in_newKey_1_6,7,0);
    VL_IN8(io_in_newKey_1_7,7,0);
    VL_IN8(io_in_newKey_1_8,7,0);
    VL_IN8(io_in_newKey_1_9,7,0);
    VL_IN8(io_in_newKey_1_10,7,0);
    VL_IN8(io_in_newKey_1_11,7,0);
    VL_IN8(io_in_newKey_1_12,7,0);
    VL_IN8(io_in_newKey_1_13,7,0);
    VL_IN8(io_in_newKey_1_14,7,0);
    VL_IN8(io_in_newKey_1_15,7,0);
    VL_IN8(io_in_newKey_2_0,7,0);
    VL_IN8(io_in_newKey_2_1,7,0);
    VL_IN8(io_in_newKey_2_2,7,0);
    VL_IN8(io_in_newKey_2_3,7,0);
    VL_IN8(io_in_newKey_2_4,7,0);
    VL_IN8(io_in_newKey_2_5,7,0);
    VL_IN8(io_in_newKey_2_6,7,0);
    VL_IN8(io_in_newKey_2_7,7,0);
    VL_IN8(io_in_newKey_2_8,7,0);
    VL_IN8(io_in_newKey_2_9,7,0);
    VL_IN8(io_in_newKey_2_10,7,0);
    VL_IN8(io_in_newKey_2_11,7,0);
    VL_IN8(io_in_newKey_2_12,7,0);
    VL_IN8(io_in_newKey_2_13,7,0);
    VL_IN8(io_in_newKey_2_14,7,0);
    VL_IN8(io_in_newKey_2_15,7,0);
    VL_IN8(io_in_newKey_3_0,7,0);
    VL_IN8(io_in_newKey_3_1,7,0);
    VL_IN8(io_in_newKey_3_2,7,0);
    VL_IN8(io_in_newKey_3_3,7,0);
    VL_IN8(io_in_newKey_3_4,7,0);
    VL_IN8(io_in_newKey_3_5,7,0);
    VL_IN8(io_in_newKey_3_6,7,0);
    VL_IN8(io_in_newKey_3_7,7,0);
    VL_IN8(io_in_newKey_3_8,7,0);
    VL_IN8(io_in_newKey_3_9,7,0);
    VL_IN8(io_in_newKey_3_10,7,0);
    VL_IN8(io_in_newKey_3_11,7,0);
    VL_IN8(io_in_newKey_3_12,7,0);
    VL_IN8(io_in_newKey_3_13,7,0);
    VL_IN8(io_in_newKey_3_14,7,0);
    VL_IN8(io_in_newKey_3_15,7,0);
    VL_IN8(io_in_newKey_4_0,7,0);
    VL_IN8(io_in_newKey_4_1,7,0);
    VL_IN8(io_in_newKey_4_2,7,0);
    VL_IN8(io_in_newKey_4_3,7,0);
    VL_IN8(io_in_newKey_4_4,7,0);
    VL_IN8(io_in_newKey_4_5,7,0);
    VL_IN8(io_in_newKey_4_6,7,0);
    VL_IN8(io_in_newKey_4_7,7,0);
    VL_IN8(io_in_newKey_4_8,7,0);
    VL_IN8(io_in_newKey_4_9,7,0);
    VL_IN8(io_in_newKey_4_10,7,0);
    VL_IN8(io_in_newKey_4_11,7,0);
    VL_IN8(io_in_newKey_4_12,7,0);
    VL_IN8(io_in_newKey_4_13,7,0);
    VL_IN8(io_in_newKey_4_14,7,0);
    VL_IN8(io_in_newKey_4_15,7,0);
    VL_IN8(io_in_newKey_5_0,7,0);
    VL_IN8(io_in_newKey_5_1,7,0);
    VL_IN8(io_in_newKey_5_2,7,0);
    VL_IN8(io_in_newKey_5_3,7,0);
    VL_IN8(io_in_newKey_5_4,7,0);
    VL_IN8(io_in_newKey_5_5,7,0);
    VL_IN8(io_in_newKey_5_6,7,0);
    VL_IN8(io_in_newKey_5_7,7,0);
    VL_IN8(io_in_newKey_5_8,7,0);
    VL_IN8(io_in_newKey_5_9,7,0);
    VL_IN8(io_in_newKey_5_10,7,0);
    VL_IN8(io_in_newKey_5_11,7,0);
    VL_IN8(io_in_newKey_5_12,7,0);
    VL_IN8(io_in_newKey_5_13,7,0);
    VL_IN8(io_in_newKey_5_14,7,0);
    VL_IN8(io_in_newKey_5_15,7,0);
    VL_IN8(io_in_newKey_6_0,7,0);
    VL_IN8(io_in_newKey_6_1,7,0);
    VL_IN8(io_in_newKey_6_2,7,0);
    VL_IN8(io_in_newKey_6_3,7,0);
    VL_IN8(io_in_newKey_6_4,7,0);
    VL_IN8(io_in_newKey_6_5,7,0);
    VL_IN8(io_in_newKey_6_6,7,0);
    VL_IN8(io_in_newKey_6_7,7,0);
    VL_IN8(io_in_newKey_6_8,7,0);
    VL_IN8(io_in_newKey_6_9,7,0);
    VL_IN8(io_in_newKey_6_10,7,0);
    VL_IN8(io_in_newKey_6_11,7,0);
    VL_IN8(io_in_newKey_6_12,7,0);
    VL_IN8(io_in_newKey_6_13,7,0);
    VL_IN8(io_in_newKey_6_14,7,0);
    VL_IN8(io_in_newKey_6_15,7,0);
    VL_IN8(io_in_newKey_7_0,7,0);
    VL_IN8(io_in_newKey_7_1,7,0);
    VL_IN8(io_in_newKey_7_2,7,0);
    VL_IN8(io_in_newKey_7_3,7,0);
    VL_IN8(io_in_newKey_7_4,7,0);
    VL_IN8(io_in_newKey_7_5,7,0);
    VL_IN8(io_in_newKey_7_6,7,0);
    VL_IN8(io_in_newKey_7_7,7,0);
    VL_IN8(io_in_newKey_7_8,7,0);
    VL_IN8(io_in_newKey_7_9,7,0);
    VL_IN8(io_in_newKey_7_10,7,0);
    VL_IN8(io_in_newKey_7_11,7,0);
    VL_IN8(io_in_newKey_7_12,7,0);
    VL_IN8(io_in_newKey_7_13,7,0);
    VL_IN8(io_in_newKey_7_14,7,0);
    VL_IN8(io_in_newKey_7_15,7,0);
    VL_IN8(io_in_newKey_8_0,7,0);
    VL_IN8(io_in_newKey_8_1,7,0);
    VL_IN8(io_in_newKey_8_2,7,0);
    VL_IN8(io_in_newKey_8_3,7,0);
    VL_IN8(io_in_newKey_8_4,7,0);
    VL_IN8(io_in_newKey_8_5,7,0);
    VL_IN8(io_in_newKey_8_6,7,0);
    VL_IN8(io_in_newKey_8_7,7,0);
    VL_IN8(io_in_newKey_8_8,7,0);
    VL_IN8(io_in_newKey_8_9,7,0);
    VL_IN8(io_in_newKey_8_10,7,0);
    VL_IN8(io_in_newKey_8_11,7,0);
    VL_IN8(io_in_newKey_8_12,7,0);
    VL_IN8(io_in_newKey_8_13,7,0);
    VL_IN8(io_in_newKey_8_14,7,0);
    VL_IN8(io_in_newKey_8_15,7,0);
    VL_IN8(io_in_newKey_9_0,7,0);
    VL_IN8(io_in_newKey_9_1,7,0);
    VL_IN8(io_in_newKey_9_2,7,0);
    VL_IN8(io_in_newKey_9_3,7,0);
    VL_IN8(io_in_newKey_9_4,7,0);
    VL_IN8(io_in_newKey_9_5,7,0);
    VL_IN8(io_in_newKey_9_6,7,0);
    VL_IN8(io_in_newKey_9_7,7,0);
    VL_IN8(io_in_newKey_9_8,7,0);
    VL_IN8(io_in_newKey_9_9,7,0);
    VL_IN8(io_in_newKey_9_10,7,0);
    VL_IN8(io_in_newKey_9_11,7,0);
    VL_IN8(io_in_newKey_9_12,7,0);
    VL_IN8(io_in_newKey_9_13,7,0);
    VL_IN8(io_in_newKey_9_14,7,0);
    VL_IN8(io_in_newKey_9_15,7,0);
    VL_IN8(io_in_newKey_10_0,7,0);
    VL_IN8(io_in_newKey_10_1,7,0);
    VL_IN8(io_in_newKey_10_2,7,0);
    VL_IN8(io_in_newKey_10_3,7,0);
    VL_IN8(io_in_newKey_10_4,7,0);
    VL_IN8(io_in_newKey_10_5,7,0);
    VL_IN8(io_in_newKey_10_6,7,0);
    VL_IN8(io_in_newKey_10_7,7,0);
    VL_IN8(io_in_newKey_10_8,7,0);
    VL_IN8(io_in_newKey_10_9,7,0);
    VL_IN8(io_in_newKey_10_10,7,0);
    VL_IN8(io_in_newKey_10_11,7,0);
    VL_IN8(io_in_newKey_10_12,7,0);
    VL_IN8(io_in_newKey_10_13,7,0);
    VL_IN8(io_in_newKey_10_14,7,0);
    VL_IN8(io_in_newKey_10_15,7,0);
    VL_OUT8(io_out_valid,0,0);
    VL_IN8(io_out_ready,0,0);
    VL_OUT8(io_out_cntr,7,0);
    VL_INW(io_in_op1,127,0,4);
    VL_INW(io_in_op2,127,0,4);
    VL_INW(io_in_cond,127,0,4);
    VL_OUTW(io_out_result,127,0,4);
    
    // LOCAL SIGNALS
    // Internals; generally not touched by application code
    // Anonymous structures to workaround compiler member-count bugs
    struct {
        CData/*0:0*/ SE__DOT__aes_invcipher_io_output_valid;
        CData/*0:0*/ SE__DOT__counterOn;
        CData/*6:0*/ SE__DOT__value;
        CData/*0:0*/ SE__DOT__wrap;
        CData/*6:0*/ SE__DOT___value_T_1;
        CData/*0:0*/ SE__DOT___T;
        CData/*0:0*/ SE__DOT___T_1;
        CData/*0:0*/ SE__DOT___GEN_3;
        CData/*7:0*/ SE__DOT__key_0_0;
        CData/*7:0*/ SE__DOT__key_0_1;
        CData/*7:0*/ SE__DOT__key_0_2;
        CData/*7:0*/ SE__DOT__key_0_3;
        CData/*7:0*/ SE__DOT__key_0_4;
        CData/*7:0*/ SE__DOT__key_0_5;
        CData/*7:0*/ SE__DOT__key_0_6;
        CData/*7:0*/ SE__DOT__key_0_7;
        CData/*7:0*/ SE__DOT__key_0_8;
        CData/*7:0*/ SE__DOT__key_0_9;
        CData/*7:0*/ SE__DOT__key_0_10;
        CData/*7:0*/ SE__DOT__key_0_11;
        CData/*7:0*/ SE__DOT__key_0_12;
        CData/*7:0*/ SE__DOT__key_0_13;
        CData/*7:0*/ SE__DOT__key_0_14;
        CData/*7:0*/ SE__DOT__key_0_15;
        CData/*7:0*/ SE__DOT__key_1_0;
        CData/*7:0*/ SE__DOT__key_1_1;
        CData/*7:0*/ SE__DOT__key_1_2;
        CData/*7:0*/ SE__DOT__key_1_3;
        CData/*7:0*/ SE__DOT__key_1_4;
        CData/*7:0*/ SE__DOT__key_1_5;
        CData/*7:0*/ SE__DOT__key_1_6;
        CData/*7:0*/ SE__DOT__key_1_7;
        CData/*7:0*/ SE__DOT__key_1_8;
        CData/*7:0*/ SE__DOT__key_1_9;
        CData/*7:0*/ SE__DOT__key_1_10;
        CData/*7:0*/ SE__DOT__key_1_11;
        CData/*7:0*/ SE__DOT__key_1_12;
        CData/*7:0*/ SE__DOT__key_1_13;
        CData/*7:0*/ SE__DOT__key_1_14;
        CData/*7:0*/ SE__DOT__key_1_15;
        CData/*7:0*/ SE__DOT__key_2_0;
        CData/*7:0*/ SE__DOT__key_2_1;
        CData/*7:0*/ SE__DOT__key_2_2;
        CData/*7:0*/ SE__DOT__key_2_3;
        CData/*7:0*/ SE__DOT__key_2_4;
        CData/*7:0*/ SE__DOT__key_2_5;
        CData/*7:0*/ SE__DOT__key_2_6;
        CData/*7:0*/ SE__DOT__key_2_7;
        CData/*7:0*/ SE__DOT__key_2_8;
        CData/*7:0*/ SE__DOT__key_2_9;
        CData/*7:0*/ SE__DOT__key_2_10;
        CData/*7:0*/ SE__DOT__key_2_11;
        CData/*7:0*/ SE__DOT__key_2_12;
        CData/*7:0*/ SE__DOT__key_2_13;
        CData/*7:0*/ SE__DOT__key_2_14;
        CData/*7:0*/ SE__DOT__key_2_15;
        CData/*7:0*/ SE__DOT__key_3_0;
        CData/*7:0*/ SE__DOT__key_3_1;
        CData/*7:0*/ SE__DOT__key_3_2;
        CData/*7:0*/ SE__DOT__key_3_3;
        CData/*7:0*/ SE__DOT__key_3_4;
        CData/*7:0*/ SE__DOT__key_3_5;
        CData/*7:0*/ SE__DOT__key_3_6;
        CData/*7:0*/ SE__DOT__key_3_7;
    };
    struct {
        CData/*7:0*/ SE__DOT__key_3_8;
        CData/*7:0*/ SE__DOT__key_3_9;
        CData/*7:0*/ SE__DOT__key_3_10;
        CData/*7:0*/ SE__DOT__key_3_11;
        CData/*7:0*/ SE__DOT__key_3_12;
        CData/*7:0*/ SE__DOT__key_3_13;
        CData/*7:0*/ SE__DOT__key_3_14;
        CData/*7:0*/ SE__DOT__key_3_15;
        CData/*7:0*/ SE__DOT__key_4_0;
        CData/*7:0*/ SE__DOT__key_4_1;
        CData/*7:0*/ SE__DOT__key_4_2;
        CData/*7:0*/ SE__DOT__key_4_3;
        CData/*7:0*/ SE__DOT__key_4_4;
        CData/*7:0*/ SE__DOT__key_4_5;
        CData/*7:0*/ SE__DOT__key_4_6;
        CData/*7:0*/ SE__DOT__key_4_7;
        CData/*7:0*/ SE__DOT__key_4_8;
        CData/*7:0*/ SE__DOT__key_4_9;
        CData/*7:0*/ SE__DOT__key_4_10;
        CData/*7:0*/ SE__DOT__key_4_11;
        CData/*7:0*/ SE__DOT__key_4_12;
        CData/*7:0*/ SE__DOT__key_4_13;
        CData/*7:0*/ SE__DOT__key_4_14;
        CData/*7:0*/ SE__DOT__key_4_15;
        CData/*7:0*/ SE__DOT__key_5_0;
        CData/*7:0*/ SE__DOT__key_5_1;
        CData/*7:0*/ SE__DOT__key_5_2;
        CData/*7:0*/ SE__DOT__key_5_3;
        CData/*7:0*/ SE__DOT__key_5_4;
        CData/*7:0*/ SE__DOT__key_5_5;
        CData/*7:0*/ SE__DOT__key_5_6;
        CData/*7:0*/ SE__DOT__key_5_7;
        CData/*7:0*/ SE__DOT__key_5_8;
        CData/*7:0*/ SE__DOT__key_5_9;
        CData/*7:0*/ SE__DOT__key_5_10;
        CData/*7:0*/ SE__DOT__key_5_11;
        CData/*7:0*/ SE__DOT__key_5_12;
        CData/*7:0*/ SE__DOT__key_5_13;
        CData/*7:0*/ SE__DOT__key_5_14;
        CData/*7:0*/ SE__DOT__key_5_15;
        CData/*7:0*/ SE__DOT__key_6_0;
        CData/*7:0*/ SE__DOT__key_6_1;
        CData/*7:0*/ SE__DOT__key_6_2;
        CData/*7:0*/ SE__DOT__key_6_3;
        CData/*7:0*/ SE__DOT__key_6_4;
        CData/*7:0*/ SE__DOT__key_6_5;
        CData/*7:0*/ SE__DOT__key_6_6;
        CData/*7:0*/ SE__DOT__key_6_7;
        CData/*7:0*/ SE__DOT__key_6_8;
        CData/*7:0*/ SE__DOT__key_6_9;
        CData/*7:0*/ SE__DOT__key_6_10;
        CData/*7:0*/ SE__DOT__key_6_11;
        CData/*7:0*/ SE__DOT__key_6_12;
        CData/*7:0*/ SE__DOT__key_6_13;
        CData/*7:0*/ SE__DOT__key_6_14;
        CData/*7:0*/ SE__DOT__key_6_15;
        CData/*7:0*/ SE__DOT__key_7_0;
        CData/*7:0*/ SE__DOT__key_7_1;
        CData/*7:0*/ SE__DOT__key_7_2;
        CData/*7:0*/ SE__DOT__key_7_3;
        CData/*7:0*/ SE__DOT__key_7_4;
        CData/*7:0*/ SE__DOT__key_7_5;
        CData/*7:0*/ SE__DOT__key_7_6;
        CData/*7:0*/ SE__DOT__key_7_7;
    };
    struct {
        CData/*7:0*/ SE__DOT__key_7_8;
        CData/*7:0*/ SE__DOT__key_7_9;
        CData/*7:0*/ SE__DOT__key_7_10;
        CData/*7:0*/ SE__DOT__key_7_11;
        CData/*7:0*/ SE__DOT__key_7_12;
        CData/*7:0*/ SE__DOT__key_7_13;
        CData/*7:0*/ SE__DOT__key_7_14;
        CData/*7:0*/ SE__DOT__key_7_15;
        CData/*7:0*/ SE__DOT__key_8_0;
        CData/*7:0*/ SE__DOT__key_8_1;
        CData/*7:0*/ SE__DOT__key_8_2;
        CData/*7:0*/ SE__DOT__key_8_3;
        CData/*7:0*/ SE__DOT__key_8_4;
        CData/*7:0*/ SE__DOT__key_8_5;
        CData/*7:0*/ SE__DOT__key_8_6;
        CData/*7:0*/ SE__DOT__key_8_7;
        CData/*7:0*/ SE__DOT__key_8_8;
        CData/*7:0*/ SE__DOT__key_8_9;
        CData/*7:0*/ SE__DOT__key_8_10;
        CData/*7:0*/ SE__DOT__key_8_11;
        CData/*7:0*/ SE__DOT__key_8_12;
        CData/*7:0*/ SE__DOT__key_8_13;
        CData/*7:0*/ SE__DOT__key_8_14;
        CData/*7:0*/ SE__DOT__key_8_15;
        CData/*7:0*/ SE__DOT__key_9_0;
        CData/*7:0*/ SE__DOT__key_9_1;
        CData/*7:0*/ SE__DOT__key_9_2;
        CData/*7:0*/ SE__DOT__key_9_3;
        CData/*7:0*/ SE__DOT__key_9_4;
        CData/*7:0*/ SE__DOT__key_9_5;
        CData/*7:0*/ SE__DOT__key_9_6;
        CData/*7:0*/ SE__DOT__key_9_7;
        CData/*7:0*/ SE__DOT__key_9_8;
        CData/*7:0*/ SE__DOT__key_9_9;
        CData/*7:0*/ SE__DOT__key_9_10;
        CData/*7:0*/ SE__DOT__key_9_11;
        CData/*7:0*/ SE__DOT__key_9_12;
        CData/*7:0*/ SE__DOT__key_9_13;
        CData/*7:0*/ SE__DOT__key_9_14;
        CData/*7:0*/ SE__DOT__key_9_15;
        CData/*7:0*/ SE__DOT__key_10_0;
        CData/*7:0*/ SE__DOT__key_10_1;
        CData/*7:0*/ SE__DOT__key_10_2;
        CData/*7:0*/ SE__DOT__key_10_3;
        CData/*7:0*/ SE__DOT__key_10_4;
        CData/*7:0*/ SE__DOT__key_10_5;
        CData/*7:0*/ SE__DOT__key_10_6;
        CData/*7:0*/ SE__DOT__key_10_7;
        CData/*7:0*/ SE__DOT__key_10_8;
        CData/*7:0*/ SE__DOT__key_10_9;
        CData/*7:0*/ SE__DOT__key_10_10;
        CData/*7:0*/ SE__DOT__key_10_11;
        CData/*7:0*/ SE__DOT__key_10_12;
        CData/*7:0*/ SE__DOT__key_10_13;
        CData/*7:0*/ SE__DOT__key_10_14;
        CData/*7:0*/ SE__DOT__key_10_15;
        CData/*7:0*/ SE__DOT__inst_buffer;
        CData/*0:0*/ SE__DOT__valid_buffer;
        CData/*0:0*/ SE__DOT__ready_for_input;
        CData/*0:0*/ SE__DOT___T_5;
        CData/*0:0*/ SE__DOT___GEN_362;
        CData/*7:0*/ SE__DOT__mid_inst_buffer;
        CData/*0:0*/ SE__DOT__result_valid_buffer;
        CData/*0:0*/ SE__DOT___T_64;
    };
    struct {
        CData/*0:0*/ SE__DOT__output_valid;
        CData/*0:0*/ SE__DOT___GEN_368;
        CData/*2:0*/ SE__DOT__seoperation__DOT__decode_io_fu_op;
        CData/*1:0*/ SE__DOT__seoperation__DOT__decode_io_fu_type;
        CData/*0:0*/ SE__DOT__seoperation__DOT__decode_io_signed;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_1__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_2__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_7;
    };
    struct {
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__InvShiftRows_io_state_in_15;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r___05F7;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_30__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__InvShiftRows_io_state_in_15;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_31__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_7;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_10;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_11;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_13;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__InvShiftRows_io_state_in_14;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F5;
    };
    struct {
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r___05F7;
        CData/*0:0*/ SE__DOT__aes_invcipher__DOT__InvCipherRound_32__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_cipher__DOT__CipherRoundARK__DOT__r_1;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_0;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_1;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_2;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_3;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_4;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_5;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_6;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_7;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_8;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_9;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_10;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_11;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_12;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_13;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_14;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__SubBytes_io_state_in_15;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F0;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F1;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F2;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F3;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F4;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F5;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F6;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F7;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F8;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F9;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F10;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F11;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F12;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F13;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F14;
        CData/*7:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r___05F15;
        CData/*0:0*/ SE__DOT__aes_cipher__DOT__CipherRoundNMC__DOT__r_1;
        CData/*0:0*/ SE__DOT__prng__DOT__state_0;
        CData/*0:0*/ SE__DOT__prng__DOT__state_1;
        CData/*0:0*/ SE__DOT__prng__DOT__state_2;
        CData/*0:0*/ SE__DOT__prng__DOT__state_3;
        CData/*0:0*/ SE__DOT__prng__DOT__state_4;
        CData/*0:0*/ SE__DOT__prng__DOT__state_5;
        CData/*0:0*/ SE__DOT__prng__DOT__state_6;
        CData/*0:0*/ SE__DOT__prng__DOT__state_7;
        CData/*0:0*/ SE__DOT__prng__DOT__state_8;
        CData/*0:0*/ SE__DOT__prng__DOT__state_9;
        CData/*0:0*/ SE__DOT__prng__DOT__state_10;
    };
    struct {
        CData/*0:0*/ SE__DOT__prng__DOT__state_11;
        CData/*0:0*/ SE__DOT__prng__DOT__state_12;
        CData/*0:0*/ SE__DOT__prng__DOT__state_13;
        CData/*0:0*/ SE__DOT__prng__DOT__state_14;
        CData/*0:0*/ SE__DOT__prng__DOT__state_15;
        CData/*0:0*/ SE__DOT__prng__DOT__state_16;
        CData/*0:0*/ SE__DOT__prng__DOT__state_17;
        CData/*0:0*/ SE__DOT__prng__DOT__state_18;
        CData/*0:0*/ SE__DOT__prng__DOT__state_19;
        CData/*0:0*/ SE__DOT__prng__DOT__state_20;
        CData/*0:0*/ SE__DOT__prng__DOT__state_21;
        CData/*0:0*/ SE__DOT__prng__DOT__state_22;
        CData/*0:0*/ SE__DOT__prng__DOT__state_23;
        CData/*0:0*/ SE__DOT__prng__DOT__state_24;
        CData/*0:0*/ SE__DOT__prng__DOT__state_25;
        CData/*0:0*/ SE__DOT__prng__DOT__state_26;
        CData/*0:0*/ SE__DOT__prng__DOT__state_27;
        CData/*0:0*/ SE__DOT__prng__DOT__state_28;
        CData/*0:0*/ SE__DOT__prng__DOT__state_29;
        CData/*0:0*/ SE__DOT__prng__DOT__state_30;
        CData/*0:0*/ SE__DOT__prng__DOT__state_31;
        CData/*0:0*/ SE__DOT__prng__DOT__state_32;
        CData/*0:0*/ SE__DOT__prng__DOT__state_33;
        CData/*0:0*/ SE__DOT__prng__DOT__state_34;
        CData/*0:0*/ SE__DOT__prng__DOT__state_35;
        CData/*0:0*/ SE__DOT__prng__DOT__state_36;
        CData/*0:0*/ SE__DOT__prng__DOT__state_37;
        CData/*0:0*/ SE__DOT__prng__DOT__state_38;
        CData/*0:0*/ SE__DOT__prng__DOT__state_39;
        CData/*0:0*/ SE__DOT__prng__DOT__state_40;
        CData/*0:0*/ SE__DOT__prng__DOT__state_41;
        CData/*0:0*/ SE__DOT__prng__DOT__state_42;
        CData/*0:0*/ SE__DOT__prng__DOT__state_43;
        CData/*0:0*/ SE__DOT__prng__DOT__state_44;
        CData/*0:0*/ SE__DOT__prng__DOT__state_45;
        CData/*0:0*/ SE__DOT__prng__DOT__state_46;
        CData/*0:0*/ SE__DOT__prng__DOT__state_47;
        CData/*0:0*/ SE__DOT__prng__DOT__state_48;
        CData/*0:0*/ SE__DOT__prng__DOT__state_49;
        CData/*0:0*/ SE__DOT__prng__DOT__state_50;
        CData/*0:0*/ SE__DOT__prng__DOT__state_51;
        CData/*0:0*/ SE__DOT__prng__DOT__state_52;
        CData/*0:0*/ SE__DOT__prng__DOT__state_53;
        CData/*0:0*/ SE__DOT__prng__DOT__state_54;
        CData/*0:0*/ SE__DOT__prng__DOT__state_55;
        CData/*0:0*/ SE__DOT__prng__DOT__state_56;
        CData/*0:0*/ SE__DOT__prng__DOT__state_57;
        CData/*0:0*/ SE__DOT__prng__DOT__state_58;
        CData/*0:0*/ SE__DOT__prng__DOT__state_59;
        CData/*0:0*/ SE__DOT__prng__DOT__state_60;
        CData/*0:0*/ SE__DOT__prng__DOT__state_61;
        CData/*0:0*/ SE__DOT__prng__DOT__state_62;
        CData/*0:0*/ SE__DOT__prng__DOT__state_63;
        WData/*127:0*/ SE__DOT__op1_buffer[4];
        WData/*127:0*/ SE__DOT__op2_buffer[4];
        WData/*127:0*/ SE__DOT__cond_buffer[4];
        WData/*127:0*/ SE__DOT__mid_op1_buffer[4];
        WData/*127:0*/ SE__DOT__op2_asUInt[4];
        WData/*127:0*/ SE__DOT__padded_result[4];
        WData/*127:0*/ SE__DOT__result_buffer[4];
        WData/*127:0*/ SE__DOT__output_buffer[4];
        WData/*127:0*/ SE__DOT__seoperation__DOT__fu__DOT___GEN_12[4];
        QData/*63:0*/ SE__DOT__seoperation_io_op1_input;
    };
    
    // LOCAL VARIABLES
    // Internals; generally not touched by application code
    CData/*0:0*/ __Vclklast__TOP__clock;
    
    // INTERNAL VARIABLES
    // Internals; generally not touched by application code
    VSE__Syms* __VlSymsp;  // Symbol table
    
    // CONSTRUCTORS
  private:
    VL_UNCOPYABLE(VSE);  ///< Copying not allowed
  public:
    /// Construct the model; called by application code
    /// The special name  may be used to make a wrapper with a
    /// single model invisible with respect to DPI scope names.
    VSE(const char* name = "TOP");
    /// Destroy the model; called (often implicitly) by application code
    ~VSE();
    
    // API METHODS
    /// Evaluate the model.  Application must call when inputs change.
    void eval();
    /// Simulation complete, run final blocks.  Application must call on completion.
    void final();
    
    // INTERNAL METHODS
  private:
    static void _eval_initial_loop(VSE__Syms* __restrict vlSymsp);
  public:
    void __Vconfigure(VSE__Syms* symsp, bool first);
  private:
    static QData _change_request(VSE__Syms* __restrict vlSymsp);
  public:
    static void _combo__TOP__6(VSE__Syms* __restrict vlSymsp);
  private:
    void _ctor_var_reset() VL_ATTR_COLD;
  public:
    static void _eval(VSE__Syms* __restrict vlSymsp);
  private:
#ifdef VL_DEBUG
    void _eval_debug_assertions();
#endif  // VL_DEBUG
  public:
    static void _eval_initial(VSE__Syms* __restrict vlSymsp) VL_ATTR_COLD;
    static void _eval_settle(VSE__Syms* __restrict vlSymsp) VL_ATTR_COLD;
    static void _sequent__TOP__1(VSE__Syms* __restrict vlSymsp);
    static void _sequent__TOP__2(VSE__Syms* __restrict vlSymsp);
    static void _sequent__TOP__3(VSE__Syms* __restrict vlSymsp);
    static void _sequent__TOP__4(VSE__Syms* __restrict vlSymsp);
    static void _settle__TOP__5(VSE__Syms* __restrict vlSymsp) VL_ATTR_COLD;
} VL_ATTR_ALIGNED(VL_CACHE_LINE_BYTES);

//----------


#endif  // guard
